# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import Message2Clients_pb2 as Message2Clients__pb2
import Message2Server_pb2 as Message2Server__pb2


class AvailableServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TryConnection = channel.unary_unary(
                '/protobuf.AvailableService/TryConnection',
                request_serializer=Message2Server__pb2.IDMsg.SerializeToString,
                response_deserializer=Message2Clients__pb2.BoolRes.FromString,
                )
        self.AddPlayer = channel.unary_stream(
                '/protobuf.AvailableService/AddPlayer',
                request_serializer=Message2Server__pb2.PlayerMsg.SerializeToString,
                response_deserializer=Message2Clients__pb2.MessageToClient.FromString,
                )
        self.GetMap = channel.unary_unary(
                '/protobuf.AvailableService/GetMap',
                request_serializer=Message2Server__pb2.NullRequest.SerializeToString,
                response_deserializer=Message2Clients__pb2.MessageOfMap.FromString,
                )
        self.Move = channel.unary_unary(
                '/protobuf.AvailableService/Move',
                request_serializer=Message2Server__pb2.MoveMsg.SerializeToString,
                response_deserializer=Message2Clients__pb2.MoveRes.FromString,
                )
        self.Recover = channel.unary_unary(
                '/protobuf.AvailableService/Recover',
                request_serializer=Message2Server__pb2.RecoverMsg.SerializeToString,
                response_deserializer=Message2Clients__pb2.BoolRes.FromString,
                )
        self.Produce = channel.unary_unary(
                '/protobuf.AvailableService/Produce',
                request_serializer=Message2Server__pb2.IDMsg.SerializeToString,
                response_deserializer=Message2Clients__pb2.BoolRes.FromString,
                )
        self.Rebuild = channel.unary_unary(
                '/protobuf.AvailableService/Rebuild',
                request_serializer=Message2Server__pb2.ConstructMsg.SerializeToString,
                response_deserializer=Message2Clients__pb2.BoolRes.FromString,
                )
        self.Construct = channel.unary_unary(
                '/protobuf.AvailableService/Construct',
                request_serializer=Message2Server__pb2.ConstructMsg.SerializeToString,
                response_deserializer=Message2Clients__pb2.BoolRes.FromString,
                )
        self.Attack = channel.unary_unary(
                '/protobuf.AvailableService/Attack',
                request_serializer=Message2Server__pb2.AttackMsg.SerializeToString,
                response_deserializer=Message2Clients__pb2.BoolRes.FromString,
                )
        self.Send = channel.unary_unary(
                '/protobuf.AvailableService/Send',
                request_serializer=Message2Server__pb2.SendMsg.SerializeToString,
                response_deserializer=Message2Clients__pb2.BoolRes.FromString,
                )
        self.InstallModule = channel.unary_unary(
                '/protobuf.AvailableService/InstallModule',
                request_serializer=Message2Server__pb2.InstallMsg.SerializeToString,
                response_deserializer=Message2Clients__pb2.BoolRes.FromString,
                )
        self.Recycle = channel.unary_unary(
                '/protobuf.AvailableService/Recycle',
                request_serializer=Message2Server__pb2.IDMsg.SerializeToString,
                response_deserializer=Message2Clients__pb2.BoolRes.FromString,
                )
        self.BuildShip = channel.unary_unary(
                '/protobuf.AvailableService/BuildShip',
                request_serializer=Message2Server__pb2.BuildShipMsg.SerializeToString,
                response_deserializer=Message2Clients__pb2.BoolRes.FromString,
                )
        self.BuildShipRID = channel.unary_unary(
                '/protobuf.AvailableService/BuildShipRID',
                request_serializer=Message2Server__pb2.BuildShipMsg.SerializeToString,
                response_deserializer=Message2Clients__pb2.BuildShipRes.FromString,
                )
        self.EndAllAction = channel.unary_unary(
                '/protobuf.AvailableService/EndAllAction',
                request_serializer=Message2Server__pb2.IDMsg.SerializeToString,
                response_deserializer=Message2Clients__pb2.BoolRes.FromString,
                )


class AvailableServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def TryConnection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddPlayer(self, request, context):
        """游戏开局调用一次的服务
        连接上后等待游戏开始，server会定时通过该服务向所有client发送消息
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Move(self, request, context):
        """游戏过程中玩家执行操作的服务
        船
        移动
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Recover(self, request, context):
        """回复
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Produce(self, request, context):
        """开采
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Rebuild(self, request, context):
        """给建筑回血
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Construct(self, request, context):
        """修建建筑
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Attack(self, request, context):
        """攻击
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Send(self, request, context):
        """传递信息
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InstallModule(self, request, context):
        """大本营
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Recycle(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuildShip(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuildShipRID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EndAllAction(self, request, context):
        """结束所有动作
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AvailableServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TryConnection': grpc.unary_unary_rpc_method_handler(
                    servicer.TryConnection,
                    request_deserializer=Message2Server__pb2.IDMsg.FromString,
                    response_serializer=Message2Clients__pb2.BoolRes.SerializeToString,
            ),
            'AddPlayer': grpc.unary_stream_rpc_method_handler(
                    servicer.AddPlayer,
                    request_deserializer=Message2Server__pb2.PlayerMsg.FromString,
                    response_serializer=Message2Clients__pb2.MessageToClient.SerializeToString,
            ),
            'GetMap': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMap,
                    request_deserializer=Message2Server__pb2.NullRequest.FromString,
                    response_serializer=Message2Clients__pb2.MessageOfMap.SerializeToString,
            ),
            'Move': grpc.unary_unary_rpc_method_handler(
                    servicer.Move,
                    request_deserializer=Message2Server__pb2.MoveMsg.FromString,
                    response_serializer=Message2Clients__pb2.MoveRes.SerializeToString,
            ),
            'Recover': grpc.unary_unary_rpc_method_handler(
                    servicer.Recover,
                    request_deserializer=Message2Server__pb2.RecoverMsg.FromString,
                    response_serializer=Message2Clients__pb2.BoolRes.SerializeToString,
            ),
            'Produce': grpc.unary_unary_rpc_method_handler(
                    servicer.Produce,
                    request_deserializer=Message2Server__pb2.IDMsg.FromString,
                    response_serializer=Message2Clients__pb2.BoolRes.SerializeToString,
            ),
            'Rebuild': grpc.unary_unary_rpc_method_handler(
                    servicer.Rebuild,
                    request_deserializer=Message2Server__pb2.ConstructMsg.FromString,
                    response_serializer=Message2Clients__pb2.BoolRes.SerializeToString,
            ),
            'Construct': grpc.unary_unary_rpc_method_handler(
                    servicer.Construct,
                    request_deserializer=Message2Server__pb2.ConstructMsg.FromString,
                    response_serializer=Message2Clients__pb2.BoolRes.SerializeToString,
            ),
            'Attack': grpc.unary_unary_rpc_method_handler(
                    servicer.Attack,
                    request_deserializer=Message2Server__pb2.AttackMsg.FromString,
                    response_serializer=Message2Clients__pb2.BoolRes.SerializeToString,
            ),
            'Send': grpc.unary_unary_rpc_method_handler(
                    servicer.Send,
                    request_deserializer=Message2Server__pb2.SendMsg.FromString,
                    response_serializer=Message2Clients__pb2.BoolRes.SerializeToString,
            ),
            'InstallModule': grpc.unary_unary_rpc_method_handler(
                    servicer.InstallModule,
                    request_deserializer=Message2Server__pb2.InstallMsg.FromString,
                    response_serializer=Message2Clients__pb2.BoolRes.SerializeToString,
            ),
            'Recycle': grpc.unary_unary_rpc_method_handler(
                    servicer.Recycle,
                    request_deserializer=Message2Server__pb2.IDMsg.FromString,
                    response_serializer=Message2Clients__pb2.BoolRes.SerializeToString,
            ),
            'BuildShip': grpc.unary_unary_rpc_method_handler(
                    servicer.BuildShip,
                    request_deserializer=Message2Server__pb2.BuildShipMsg.FromString,
                    response_serializer=Message2Clients__pb2.BoolRes.SerializeToString,
            ),
            'BuildShipRID': grpc.unary_unary_rpc_method_handler(
                    servicer.BuildShipRID,
                    request_deserializer=Message2Server__pb2.BuildShipMsg.FromString,
                    response_serializer=Message2Clients__pb2.BuildShipRes.SerializeToString,
            ),
            'EndAllAction': grpc.unary_unary_rpc_method_handler(
                    servicer.EndAllAction,
                    request_deserializer=Message2Server__pb2.IDMsg.FromString,
                    response_serializer=Message2Clients__pb2.BoolRes.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'protobuf.AvailableService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AvailableService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def TryConnection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobuf.AvailableService/TryConnection',
            Message2Server__pb2.IDMsg.SerializeToString,
            Message2Clients__pb2.BoolRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddPlayer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/protobuf.AvailableService/AddPlayer',
            Message2Server__pb2.PlayerMsg.SerializeToString,
            Message2Clients__pb2.MessageToClient.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobuf.AvailableService/GetMap',
            Message2Server__pb2.NullRequest.SerializeToString,
            Message2Clients__pb2.MessageOfMap.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Move(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobuf.AvailableService/Move',
            Message2Server__pb2.MoveMsg.SerializeToString,
            Message2Clients__pb2.MoveRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Recover(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobuf.AvailableService/Recover',
            Message2Server__pb2.RecoverMsg.SerializeToString,
            Message2Clients__pb2.BoolRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Produce(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobuf.AvailableService/Produce',
            Message2Server__pb2.IDMsg.SerializeToString,
            Message2Clients__pb2.BoolRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Rebuild(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobuf.AvailableService/Rebuild',
            Message2Server__pb2.ConstructMsg.SerializeToString,
            Message2Clients__pb2.BoolRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Construct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobuf.AvailableService/Construct',
            Message2Server__pb2.ConstructMsg.SerializeToString,
            Message2Clients__pb2.BoolRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Attack(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobuf.AvailableService/Attack',
            Message2Server__pb2.AttackMsg.SerializeToString,
            Message2Clients__pb2.BoolRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Send(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobuf.AvailableService/Send',
            Message2Server__pb2.SendMsg.SerializeToString,
            Message2Clients__pb2.BoolRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InstallModule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobuf.AvailableService/InstallModule',
            Message2Server__pb2.InstallMsg.SerializeToString,
            Message2Clients__pb2.BoolRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Recycle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobuf.AvailableService/Recycle',
            Message2Server__pb2.IDMsg.SerializeToString,
            Message2Clients__pb2.BoolRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BuildShip(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobuf.AvailableService/BuildShip',
            Message2Server__pb2.BuildShipMsg.SerializeToString,
            Message2Clients__pb2.BoolRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BuildShipRID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobuf.AvailableService/BuildShipRID',
            Message2Server__pb2.BuildShipMsg.SerializeToString,
            Message2Clients__pb2.BuildShipRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EndAllAction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobuf.AvailableService/EndAllAction',
            Message2Server__pb2.IDMsg.SerializeToString,
            Message2Clients__pb2.BoolRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
